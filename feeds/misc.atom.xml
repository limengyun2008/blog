<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>limengyun's blog</title><link href="http://limengyun.com/" rel="alternate"></link><link href="http://limengyun.com/feeds/misc.atom.xml" rel="self"></link><id>http://limengyun.com/</id><updated>2013-05-29T09:20:00+08:00</updated><entry><title>用pelican搭建自己的博客</title><link href="http://limengyun.com/backend/blogging-with-pelican.html" rel="alternate"></link><updated>2013-05-29T09:20:00+08:00</updated><author><name>limengyun</name></author><id>tag:limengyun.com,2013-05-29:backend/blogging-with-pelican.html</id><summary type="html">&lt;h2&gt;什么是pelican&lt;/h2&gt;
&lt;p&gt;pelican是一个用python写的开源的博客系统，类似ruby的jekyll/otcopress。这一类博客都属于static site generator，工作原理就是直接使用markdown等结构化文本语言撰写博客内容之后再使用脚本配合定制的CSS/JS及templates文件生成一个静态站点,很对我的胃口。最早接触的static site generator就是otcpress，但个人用python习惯之后实在是不习惯ruby的语法，在一番折腾之后终于找到了一个python版的otcopress——pelican。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;这个博客就是使用的pelican&lt;/b&gt;&lt;/p&gt;
&lt;h2&gt;requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;linux&lt;/li&gt;
&lt;li&gt;python 2.7.3&lt;/li&gt;
&lt;li&gt;python pip&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="mf"&gt;3.2.1&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;为了使用&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt; &lt;span class="n"&gt;pages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;写博客&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;会生成一个文件夹，在contents 目录下创建后缀名为.md的文件，就可以使用markdown写博客了，当然,文件里面还是需要有一些必要的metadata的。给一个示例的文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Hello&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;misc&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;helloworld&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Hello&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;

&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="n"&gt;Hello&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;

&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;部署&lt;/h2&gt;
&lt;p&gt;文件保存之后执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;会生成一个output 文件夹，里面是一个完整的静态页面站点，你可以用讲output上传到自己的服务器即可提供服务了。&lt;/p&gt;
&lt;p&gt;如果想要使用github pages服务，则需要将使用站点的源代码创建一个github代码库。
在pelicanconf.py所在目录执行以下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;比otcopress方便不少。&lt;/p&gt;
&lt;h3&gt;还有很多高级用法请参见&lt;a href="http://getpelican.com/"&gt;Pelican官方文档&lt;/a&gt;&lt;/h3&gt;</summary><category term="pelican"></category></entry><entry><title>Hello, World!</title><link href="http://limengyun.com/helloworld.html" rel="alternate"></link><updated>2013-01-01T00:00:00+08:00</updated><author><name>limengyun</name></author><id>tag:limengyun.com,2013-01-01:helloworld.html</id><summary type="html">&lt;h2&gt;Hello, World!&lt;/h2&gt;
&lt;p&gt;this is a template for article.&lt;/p&gt;</summary><category term="pelican"></category></entry></feed>